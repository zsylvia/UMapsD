function PriorityQueue(){this._nodes=[],this.enqueue=function(t,e){this._nodes.push({key:e,priority:t}),this.sort()},this.dequeue=function(){return this._nodes.shift().key},this.sort=function(){this._nodes.sort(function(t,e){return t.priority-e.priority})},this.isEmpty=function(){return!this._nodes.length}}function Graph(){var t=1/0;this.vertices={},this.addVertex=function(t,e){this.vertices[t]=e},this.shortestPath=function(e,i){var s,n,r,u,o=new PriorityQueue,h={},f={},c=[];for(n in this.vertices)n===e?(h[n]=0,o.enqueue(0,n)):(h[n]=t,o.enqueue(t,n)),f[n]=null;for(;!o.isEmpty();){if(s=o.dequeue(),s===i){for(;f[s];)c.push(s),s=f[s];break}if(s&&h[s]!==t)for(r in this.vertices[s])u=h[s]+this.vertices[s][r],u<h[r]&&(h[r]=u,f[r]=s,o.enqueue(u,r))}return c}}