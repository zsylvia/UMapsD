function getPathToBuilding(a,t,r){var o;allMarkers.forEach(function(a){null==o&&(o=a.get(t))});var l=new buckets.Set(function(a){return a.data(GlobalStrings.ID)});pathMap.values().forEach(function(a){var t;if(a.marker1Data.type!=GlobalStrings.DOOR||a.marker1Data.building!=r||null!=a.marker2Data.building&&a.marker1Data.building==a.marker2Data.building?a.marker2Data.type!=GlobalStrings.DOOR||a.marker2Data.building!=r||null!=a.marker1Data.building&&a.marker2Data.building==a.marker1Data.building||(t=a.marker2Data.id):t=a.marker1Data.id,null!=t){var o;allMarkers.forEach(function(a){null==o&&(o=a.get(t))}),l.add(o)}});var n,e=999999;return l.forEach(function(r){for(var o=a.shortestPath(""+t,""+r.data(GlobalStrings.ID)).concat([""+t]).reverse(),l=0,i=0;i<o.length;i++)if(i<o.length-1){var s=pathMap.get(o[i]+"<->"+o[i+1]);null==s&&(s=pathMap.get(o[i+1]+"<->"+o[i])),l+=s.distance}e>l&&(e=l,n=o)}),n}function getClosestRoom(a){var t=null,r=9999999;return roomMap.forEach(function(o,l){if(l.isVisible()&&a!=l&&inSameBuilding(a,l)&&onSameFloor(a,l)){var n=getDistance(a,l);r>n&&(t=l,r=n)}}),null!=t?LOG.debug("Closest room marker to "+a.data(GlobalStrings.ID)+" is "+t.data(GlobalStrings.ID)):LOG.error("Closest room marker to "+a.data(GlobalStrings.ID)+" is null"),t}function getClosestBathroomMens(a){var t=null,r=9999999;return bathroomMensMap.forEach(function(o,l){if(l.isVisible()&&a!=l&&inSameBuilding(a,l)&&onSameFloor(a,l)){var n=getDistance(a,l);r>n&&(t=l,r=n)}}),null!=t?LOG.debug("Closest men's bathroom marker to "+a.data(GlobalStrings.ID)+" is "+t.data(GlobalStrings.ID)):LOG.error("Closest men's bathroom marker to "+a.data(GlobalStrings.ID)+" is null"),t}function getClosestBathroomWomens(a){var t=null,r=9999999;return bathroomWomensMap.forEach(function(o,l){if(l.isVisible()&&a!=l&&inSameBuilding(a,l)&&onSameFloor(a,l)){var n=getDistance(a,l);r>n&&(t=l,r=n)}}),null!=t?LOG.debug("Closest women's bathroom marker to "+a.data(GlobalStrings.ID)+" is "+t.data(GlobalStrings.ID)):LOG.error("Closest women's bathroom marker to "+a.data(GlobalStrings.ID)+" is null"),t}function getClosestHallway(a){var t=null,r=9999999;return hallwayMap.forEach(function(o,l){if(l.isVisible()&&a!=l&&inSameBuilding(a,l)&&onSameFloor(a,l)){var n=getDistance(a,l);r>n&&(t=l,r=n)}}),null!=t?LOG.debug("Closest hallway marker to "+a.data(GlobalStrings.ID)+" is "+t.data(GlobalStrings.ID)):LOG.error("Closest hallway marker to "+a.data(GlobalStrings.ID)+" is null"),t}function getClosestDoor(a,t,r){var o=null,l=9999999;return doorMap.forEach(function(n,e){var i=!0;if(t&&!inSameBuilding(a,e)&&(i=!1),r&&!onSameFloor(a,e)&&(i=!1),e.isVisible()&&a!=e&&i){var s=getDistance(a,e);l>s&&(o=e,l=s)}}),null!=o?LOG.debug("Closest door marker to "+a.data(GlobalStrings.ID)+" is "+o.data(GlobalStrings.ID)):LOG.error("Closest door marker to "+a.data(GlobalStrings.ID)+" is null"),o}function getClosestPathway(a){var t=null,r=9999999;return pathwayMap.forEach(function(o,l){if(a!=l){var n=getDistance(a,l);r>n&&(t=l,r=n)}}),null!=t?LOG.debug("Closest door marker to "+a.data(GlobalStrings.ID)+" is "+t.data(GlobalStrings.ID)):LOG.error("Closest door marker to "+a.data(GlobalStrings.ID)+" is null"),t}function getShortestPath(a,t,r){return LOG.debug("Getting shortest path from "+t+" to "+r),a.shortestPath(""+t,""+r).concat([""+t]).reverse()}